{"ast":null,"code":"var _jsxFileName = \"/home/nbow/workplace/av-video-player/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from 'react';\nimport VideoPlayer from './VideoPlayer';\nimport './App.scss';\nimport { LoadingSpinner } from 'video-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const videoRef = useRef(null);\n  const videoList = ['https://media.w3.org/2010/05/sintel/trailer_hd.mp4', 'http://www.w3schools.com/html/mov_bbb.mp4'];\n  const [currentVideo, setCurrentVideo] = useState(0);\n  const [playerData, updatePlayerData] = useState('');\n\n  const getData = () => updatePlayerData(videoRef.current.getState().player);\n\n  useEffect(() => {\n    const startIterval = cb => setInterval(cb, 500);\n\n    const fetchPlayerData = () => {\n      getData();\n\n      if (playerData.ended) {\n        clearInterval(timer);\n        LoadingSpinner();\n      }\n    };\n\n    const timer = startIterval(fetchPlayerData);\n    return () => clearInterval(timer);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"VideoPlayer\",\n      children: /*#__PURE__*/_jsxDEV(VideoPlayer, {\n        src: videoList[currentVideo],\n        videoRef: videoRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PlayerData\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"key\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), Object.keys(playerData).map(key => {\n          const value = playerData[key];\n\n          if (typeof value !== \"object\") {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: key\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: String(playerData[key]).slice(0, 20)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 15\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ko6vpZizQ+PG+QNZRL1VsWF3dxU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/nbow/workplace/av-video-player/src/App.js"],"names":["useState","useRef","useEffect","VideoPlayer","LoadingSpinner","App","videoRef","videoList","currentVideo","setCurrentVideo","playerData","updatePlayerData","getData","current","getState","player","startIterval","cb","setInterval","fetchPlayerData","ended","clearInterval","timer","Object","keys","map","key","value","String","slice"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,YAAP;AACA,SAASC,cAAT,QAA+B,aAA/B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAEL,MAAM,CAAC,IAAD,CAAtB;AACA,QAAMM,SAAS,GAAG,CAAC,oDAAD,EAAuD,2CAAvD,CAAlB;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACU,UAAD,EAAaC,gBAAb,IAAiCX,QAAQ,CAAC,EAAD,CAA/C;;AAEA,QAAMY,OAAO,GAAG,MAAMD,gBAAgB,CAACL,QAAQ,CAACO,OAAT,CAAiBC,QAAjB,GAA4BC,MAA7B,CAAtC;;AAEAb,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAMc,YAAY,GAAIC,EAAD,IAAQC,WAAW,CAACD,EAAD,EAAK,GAAL,CAAxC;;AACA,UAAME,eAAe,GAAG,MAAM;AAC5BP,MAAAA,OAAO;;AACP,UAAGF,UAAU,CAACU,KAAd,EAAoB;AAClBC,QAAAA,aAAa,CAACC,KAAD,CAAb;AACAlB,QAAAA,cAAc;AACf;AACF,KAND;;AAOA,UAAMkB,KAAK,GAAGN,YAAY,CAACG,eAAD,CAA1B;AAEA,WAAO,MAAME,aAAa,CAACC,KAAD,CAA1B;AACD,GAbQ,CAAT;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,GAAG,EAAEf,SAAS,CAACC,YAAD,CAA3B;AAA2C,QAAA,QAAQ,EAAEF;AAArD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AAAA,gCACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAKCiB,MAAM,CAACC,IAAP,CAAYd,UAAZ,EAAwBe,GAAxB,CAA4BC,GAAG,IAAI;AAClC,gBAAMC,KAAK,GAAGjB,UAAU,CAACgB,GAAD,CAAxB;;AACA,cAAI,OAAOC,KAAP,KAAiB,QAArB,EAA8B;AAC5B,gCAAQ;AAAA,sCACN;AAAA,0BAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,sBADM,eAEN;AAAA,0BAAKE,MAAM,CAAClB,UAAU,CAACgB,GAAD,CAAX,CAAN,CAAwBG,KAAxB,CAA8B,CAA9B,EAAgC,EAAhC;AAAL;AAAA;AAAA;AAAA;AAAA,sBAFM;AAAA,eAASH,GAAT;AAAA;AAAA;AAAA;AAAA,oBAAR;AAKD;AACF,SATA,CALD;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAlDQrB,G;;KAAAA,G;AAoDT,eAAeA,GAAf","sourcesContent":["import { useState, useRef, useEffect } from 'react';\nimport VideoPlayer from './VideoPlayer';\nimport './App.scss';\nimport { LoadingSpinner } from 'video-react';\n\nfunction App() {\n  const videoRef= useRef(null);\n  const videoList = ['https://media.w3.org/2010/05/sintel/trailer_hd.mp4', 'http://www.w3schools.com/html/mov_bbb.mp4'];\n  const [currentVideo, setCurrentVideo] = useState(0);\n  const [playerData, updatePlayerData] = useState('');\n\n  const getData = () => updatePlayerData(videoRef.current.getState().player);\n  \n  useEffect(() => {\n    \n    const startIterval = (cb) => setInterval(cb, 500);\n    const fetchPlayerData = () => {\n      getData();\n      if(playerData.ended){\n        clearInterval(timer);\n        LoadingSpinner()\n      }\n    };\n    const timer = startIterval(fetchPlayerData);\n\n    return () => clearInterval(timer);\n  });\n\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"VideoPlayer\">\n        <VideoPlayer src={videoList[currentVideo]} videoRef={videoRef}/>\n      </div>\n      <div className=\"PlayerData\">\n        <table>\n          <tr>\n            <th>key</th>\n            <th>value</th>\n          </tr>\n        {Object.keys(playerData).map(key => {\n          const value = playerData[key];\n          if (typeof value !== \"object\"){\n            return (<tr key={key}>\n              <td>{key}</td>\n              <td>{String(playerData[key]).slice(0,20)}</td>\n              </tr>\n            );\n          }\n        })}\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}